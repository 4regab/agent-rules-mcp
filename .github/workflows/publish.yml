name: Publish Package

on:
  push:
    tags:
      - 'v*'
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test
      
      - name: Build project
        run: npm run build:prod

  publish-github:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js for GitHub Packages
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@4regab'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build project
        run: npm run build:prod
      
      - name: Configure package for GitHub Packages
        run: |
          # Create a copy of package.json for GitHub Packages
          cp package.json package-github.json
          
          # Update for GitHub Packages (scoped name)
          npm pkg set name="@4regab/agent-rules-mcp" --json-file=package-github.json
          npm pkg set publishConfig.registry="https://npm.pkg.github.com" --json-file=package-github.json
          
          # Use the GitHub Packages version
          mv package-github.json package.json
      
      - name: Set up GitHub Packages authentication
        run: echo "//npm.pkg.github.com/:_authToken=${NODE_AUTH_TOKEN}" > ~/.npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Debug GitHub package info
        run: |
          echo "Package name: $(npm pkg get name)"
          echo "Package version: $(npm pkg get version)"
          echo "Registry: $(npm config get registry)"
          echo "Auth configured: $(test -f ~/.npmrc && echo 'Yes' || echo 'No')"
          
      - name: Publish to GitHub Packages
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-npm:
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') || github.event_name == 'release' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js for NPM
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build project
        run: npm run build:prod
      
      - name: Configure package for NPM
        run: |
          # Ensure package.json has correct configuration for public npm
          npm pkg set publishConfig.registry="https://registry.npmjs.org"
          npm pkg set publishConfig.access="public"
      
      - name: Set up npm authentication
        run: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Debug package info
        run: |
          echo "Package name: $(npm pkg get name)"
          echo "Package version: $(npm pkg get version)"
          echo "Registry: $(npm config get registry)"
          echo "Auth configured: $(test -f ~/.npmrc && echo 'Yes' || echo 'No')"
          
      - name: Check NPM authentication
        run: |
          echo "Testing NPM authentication..."
          npm whoami || echo "NPM authentication failed"
          
      - name: Check if version already exists
        run: |
          echo "Checking if version already exists..."
          npm view agent-rules-mcp@$(npm pkg get version --workspaces=false | tr -d '"') || echo "Version does not exist, proceeding with publish"
          
      - name: Publish to NPM
        run: npm publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}